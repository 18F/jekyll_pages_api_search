#! /usr/bin/env ruby
# Author: Mike Bland <michael.bland@gsa.gov>
# Date:   2015-06-21

require_relative '../lib/jekyll_pages_api_search'
require 'fileutils'
require 'jekyll_pages_api'
require 'zlib'

USAGE=<<END_USAGE
#{$0}: generate a lunr.js index from Jekyll Pages API output

Usage:
  #{$0} basedir config.yml [pages.json]"
  #{$0} -h

Arguments:
  -h
    Print this help message
  basedir
    Path to the generated site's root directory
  config.yml
    Path to the site's config.yml containing a `jekyll_pages_api_search` entry
  pages.json
    Path to the output file generated by `jekyll_pages_api`
END_USAGE

if ARGV.length == 1 && ARGV[0] == '-h'
  puts USAGE
  exit
end

if ARGV.length != 3
  $stderr.puts USAGE
  exit 1
end

ARGV.each do |f|
  if !File.exist? f
    $stderr.puts "#{f} does not exist"
    exit 1
  end
end

baseurl, config, pages_json = ARGV

site = ::JekyllPagesApiSearch::Site.new baseurl, config
site.load_pages_json pages_json
index = ::JekyllPagesApiSearch::SearchIndexBuilder.build_index site

outfile = File.join site.source, index.name
File.open(outfile, 'w') {|f| f << index.output.to_s}
Zlib::GzipWriter.open("#{outfile}.gz", Zlib::BEST_COMPRESSION) do |gz|
  gz.write index.output
end

JavascriptCopier = ::JekyllPagesApiSearch::JavascriptCopier
target_path = File.join site.source, JavascriptCopier::ASSETS_DIR
FileUtils.mkdir_p target_path
JavascriptCopier::search_bundle_paths {|f| FileUtils.cp f, target_path}
